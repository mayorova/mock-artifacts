apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: ejb-server-to-server-elytron
metadata:
  annotations:
    description: An example template to show EJB server to server communication using Elytron
objects:

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${SERVER_APPLICATION_NAME}
    name: ${SERVER_APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${SERVER_APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The JGroups ping port for clustering.
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      application: ${SERVER_APPLICATION_NAME}
    name: ${SERVER_APPLICATION_NAME}-ping
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
    publishNotReadyAddresses: true
    selector:
      deploymentConfig: ${SERVER_APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${SERVER_APPLICATION_NAME}
    name: ${SERVER_APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${SERVER_APPLICATION_NAME}
    name: ${SERVER_APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${SERVER_APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR_PARTIAL}/server
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        - name: MAVEN_ARGS_APPEND
          value: ${MAVEN_ARGS_APPEND}
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        - name: CUSTOM_INSTALL_DIRECTORIES
          value: ${CUSTOM_INSTALL_DIRECTORIES}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-eap72-openshift:1.0
          namespace: ${IMAGE_STREAM_NAMESPACE}
        incremental: true
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${SERVER_APPLICATION_NAME}
    name: ${SERVER_APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${SERVER_APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${SERVER_APPLICATION_NAME}
          deploymentConfig: ${SERVER_APPLICATION_NAME}
        name: ${SERVER_APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JGROUPS_PING_PROTOCOL
            value: dns.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: ${SERVER_APPLICATION_NAME}-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: "8888"
          - name: MQ_CLUSTER_PASSWORD
            value: ${MQ_CLUSTER_PASSWORD}
          - name: MQ_QUEUES
            value: ${MQ_QUEUES}
          - name: MQ_TOPICS
            value: ${MQ_TOPICS}
          - name: JGROUPS_CLUSTER_PASSWORD
            value: ${JGROUPS_CLUSTER_PASSWORD}
          - name: AUTO_DEPLOY_EXPLODED
            value: ${AUTO_DEPLOY_EXPLODED}
          image: ${SERVER_APPLICATION_NAME}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
            initialDelaySeconds: 60
          name: ${SERVER_APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${SERVER_APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${SERVER_APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange


- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${CLIENT_APPLICATION_NAME}
    name: ${CLIENT_APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${CLIENT_APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The JGroups ping port for clustering.
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      application: ${CLIENT_APPLICATION_NAME}
    name: ${CLIENT_APPLICATION_NAME}-ping
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
    publishNotReadyAddresses: true
    selector:
      deploymentConfig: ${CLIENT_APPLICATION_NAME}
- apiVersion: v1
  id: ${CLIENT_APPLICATION_NAME}-https
  kind: Route
  metadata:
    annotations:
      description: Route for application's https service.
    labels:
      application: ${CLIENT_APPLICATION_NAME}
    name: ${CLIENT_APPLICATION_NAME}
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      name: ${CLIENT_APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${CLIENT_APPLICATION_NAME}
    name: ${CLIENT_APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${CLIENT_APPLICATION_NAME}
    name: ${CLIENT_APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${CLIENT_APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR_PARTIAL}/client
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        - name: MAVEN_ARGS_APPEND
          value: ${MAVEN_ARGS_APPEND}
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        - name: CUSTOM_INSTALL_DIRECTORIES
          value: ${CUSTOM_INSTALL_DIRECTORIES}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-eap72-openshift:1.0
          namespace: ${IMAGE_STREAM_NAMESPACE}
        incremental: true
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${CLIENT_APPLICATION_NAME}
    name: ${CLIENT_APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${CLIENT_APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${CLIENT_APPLICATION_NAME}
          deploymentConfig: ${CLIENT_APPLICATION_NAME}
        name: ${CLIENT_APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JGROUPS_PING_PROTOCOL
            value: dns.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: ${CLIENT_APPLICATION_NAME}-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: "8888"
          - name: MQ_CLUSTER_PASSWORD
            value: ${MQ_CLUSTER_PASSWORD}
          - name: MQ_QUEUES
            value: ${MQ_QUEUES}
          - name: MQ_TOPICS
            value: ${MQ_TOPICS}
          - name: JGROUPS_CLUSTER_PASSWORD
            value: ${JGROUPS_CLUSTER_PASSWORD}
          - name: AUTO_DEPLOY_EXPLODED
            value: ${AUTO_DEPLOY_EXPLODED}
          - name: JAVA_OPTS_APPEND
            value: -Dremote.ejb.host=${SERVER_APPLICATION_NAME}
          image: ${CLIENT_APPLICATION_NAME}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
            initialDelaySeconds: 60
          name: ${CLIENT_APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${CLIENT_APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${CLIENT_APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: Name of the client application
  displayName: Client application name
  name: CLIENT_APPLICATION_NAME
  required: true
  value: ejb-client
- description: Name of the server application
  displayName: Server application name
  name: SERVER_APPLICATION_NAME
  required: true
  value: ejb-server
- description: Git source URI for application
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/mayorova/mock-artifacts.git
- description: Git branch/tag reference
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
  value: eap72-openshift
- description: Path within Git project to build; empty for root project directory.
  displayName: Context Directory
  name: CONTEXT_DIR_PARTIAL
  value: ejb-server-to-server/ejb-server-to-server-elytron
- description: Directory where the EAP configuration for S2I is stored
  displayName: Custom Install Directories
  name: CUSTOM_INSTALL_DIRECTORIES
  value: eap
- description: Queue names, separated by commas. These queues will be automatically
    created when the broker starts. Also, they will be made accessible as JNDI resources
    in EAP. Note that all queues used by the application *must* be specified here
    in order to be created automatically on the remote AMQ broker.
  displayName: Queues
  name: MQ_QUEUES
- description: Topic names, separated by commas. These topics will be automatically
    created when the broker starts. Also, they will be made accessible as JNDI resources
    in EAP. Note that all topics used by the application *must* be specified here
    in order to be created automatically on the remote AMQ broker.
  displayName: Topics
  name: MQ_TOPICS
- description: AMQ cluster admin password
  displayName: AMQ cluster password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: MQ_CLUSTER_PASSWORD
  required: true
- description: GitHub trigger secret
  displayName: Github Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret
  displayName: Generic Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: JGroups cluster password
  displayName: JGroups Cluster Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JGROUPS_CLUSTER_PASSWORD
  required: true
- description: Controls whether exploded deployment content should be automatically
    deployed
  displayName: Deploy Exploded Archives
  name: AUTO_DEPLOY_EXPLODED
  value: "false"
- description: Maven mirror to use for S2I builds
  displayName: Maven mirror URL
  name: MAVEN_MIRROR_URL
- description: Maven additional arguments to use for S2I builds
  displayName: Maven Additional Arguments
  name: MAVEN_ARGS_APPEND
  value: -Dcom.redhat.xpaas.repo.jbossorg
- description: List of directories from which archives will be copied into the deployment
    folder. If unspecified, all archives in /target will be copied.
  name: ARTIFACT_DIR
- description: Container memory limit
  name: MEMORY_LIMIT
  value: 1Gi
